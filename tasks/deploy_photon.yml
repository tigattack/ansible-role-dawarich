---

- name: Check for existing Photon container
  community.docker.docker_container_info:
    name: "{{ dawarich_photon_container.name }}"
  register: photon_container_info

- name: Photo data path free space check
  when: not photon_container_info.exists
  block:
    - name: Get Photon dataset size
      when: dawarich_photon_country_code | length > 0
      block:
        - name: Get Photon dataset size
          ansible.builtin.uri:
            url: |
              https://download1.graphhopper.com/public/extracts/by-country-code/{{
                dawarich_photon_country_code }}/photon-db-{{ dawarich_photon_country_code }}-latest.tar.bz2
            return_content: false
          register: dataset_size

        - name: Parse Photon dataset size
          ansible.builtin.set_fact:
            # Multiply by 2.5 to approximately account for compression ratio
            dataset_size: "{{ dataset_size.content_length | int * 2.5 }}"

    - name: Test Photon path components
      ansible.builtin.stat:
        path: "{{ item }}"
      loop: |
        {% for i in range(0, dawarich_photon_data_path_segments | length) -%}
          {% set _ = dawarich_photon_data_path_combinations.append('/' + dawarich_photon_data_path_segments[0 : i + 1] | path_join) -%}
        {% endfor -%}
        {{ dawarich_photon_data_path_combinations }}
      register: test_photon_path_segments

    - name: Parse closest existing path
      ansible.builtin.set_fact:
        closest_found_photon_path: "{{ test_photon_path_segments.results | reverse | selectattr('stat.exists') | map(attribute='stat.path') | first }}"

    - name: Get free space of Photon data path
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          df -k {{ closest_found_photon_path }} | tail -1 | awk '{print $4}'
        executable: /bin/bash
      changed_when: false
      register: photon_path_free_space

    - name: Assert enough space for Photon geodata
      ansible.builtin.assert:
        that: photon_path_free_space.stdout | int >= min_size | int
        fail_msg: "{{ fail_msg }}"
      vars:
        min_size: "{{ dataset_size | default(178257920) }}" # Default 170GB
        fail_msg: |
          {% if closest_found_photon_path == dawarich_photon_data_path -%}
            There is not enough space at {{ dawarich_photon_data_path }} for Photon's geodata.
          {% else -%}
            {{ dawarich_photon_data_path }} does not exist yet. Tested {{ closest_found_photon_path }} and found there is not enough space for Photon's geodata.
          {% endif -%}

- name: Deploy Photon container # noqa args[module]
  community.docker.docker_container: "{{ dawarich_photon_container }}"
  notify: Prune Docker images
